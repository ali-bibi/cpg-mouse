# Imported Python Transfer Function
@nrp.MapSpikeSink("actor_1", nrp.brain.actors[0], nrp.leaky_integrator_alpha)
@nrp.MapSpikeSink("actor_2", nrp.brain.actors[1], nrp.leaky_integrator_alpha)
@nrp.MapSpikeSink("actor_3", nrp.brain.actors[2], nrp.leaky_integrator_alpha)
@nrp.MapSpikeSink("actor_4", nrp.brain.actors[3], nrp.leaky_integrator_alpha)
@nrp.MapRobotPublisher("FRu_topic", Topic("/robot/upper_arm_R_joint/cmd_pos", std_msgs.msg.Float64))
@nrp.MapRobotPublisher("FLu_topic", Topic("/robot/upper_arm_L_joint/cmd_pos", std_msgs.msg.Float64))
@nrp.MapRobotPublisher("FRd_topic", Topic("/robot/forearm_R_joint/cmd_pos", std_msgs.msg.Float64))
@nrp.MapRobotPublisher("FLd_topic", Topic("/robot/forearm_L_joint/cmd_pos", std_msgs.msg.Float64))
@nrp.MapRobotPublisher("HRu_topic", Topic("/robot/shin_R_joint/cmd_pos", std_msgs.msg.Float64))
@nrp.MapRobotPublisher("HLu_topic", Topic("/robot/shin_L_joint/cmd_pos", std_msgs.msg.Float64))
@nrp.MapRobotPublisher("HRd_topic", Topic("/robot/shin_lower_R_joint/cmd_pos", std_msgs.msg.Float64))
@nrp.MapRobotPublisher("HLd_topic", Topic("/robot/shin_lower_L_joint/cmd_pos", std_msgs.msg.Float64))
@nrp.Neuron2Robot()

def actors_to_robot(t, actor_1, actor_2, actor_3, actor_4, FRu_topic, FLu_topic, FRd_topic, FLd_topic, HRu_topic, HLu_topic, HRd_topic, HLd_topic):
    HLd_topic.send_message(int(actor_3.voltage * 1.2e3))
    FLd_topic.send_message(int(actor_4.voltage * 1.2e3))
    FRd_topic.send_message(int(actor_1.voltage * 1.2e3))
    HRd_topic.send_message(int(actor_2.voltage * 1.2e3))
    
    HLu_topic.send_message(int(actor_1.voltage * 1.2e3))
    FLu_topic.send_message(int(actor_2.voltage * 1.2e3))
    FRu_topic.send_message(int(actor_3.voltage * 1.2e3))
    HRu_topic.send_message(int(actor_4.voltage * 1.2e3))